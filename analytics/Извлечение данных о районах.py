#!/usr/bin/env python
# coding: utf-8

import pandas as pd
import numpy as np

region_list = [
    'Академический','Алексеевский','Алтуфьевский','Арбат',
    'Аэропорт','Бабушкинский','Басманный','Беговой','Бескудниковский','Бибирево','Бирюлёво Восточное',
    'Бирюлёво Западное','Богородское','Братеево','Бутырский','Вешняки','Внуково', 'Внуковское', 'Войковский',
    'Вороновское','Воскресенское','Восточное Дегунино','Восточное Измайлово','Выхино-Жулебино',
    'Гагаринский','Головинский','Гольяново','Даниловский','Десёновское','Дмитровский','Донской','Дорогомилово',
    'Замоскворечье','Западное Дегунино','Зюзино','Зябликово','Ивановское','Измайлово','Капотня','Киевский',
    'Кленовское','Кокошкино','Коммунарка','Коньково','Коптево','Косино-Ухтомский','Котловка','Краснопахорское',
    'Красносельский','Крылатское','Крюково','Кузьминки','Кунцево','Куриловское','Куркино',
    'Левобережный','Лефортово','Лианозово','Ломоносовский','Лосиноостровский','Люблино','Марушкинское','Марфино',
    'Марьина Роща','Марьино','Матушкино','Метрогородок','Мещанский','Митино','Михайлово-Ярцевское','Можайский',
    'Молжаниновский','Москворечье-Сабурово','Московский','Мосрентген','Нагатино-Садовники','Нагатинский Затон',
    'Нагорный','Некрасовка','Нижегородский','Новогиреево','Новокосино','Ново-Переделкино','Новофедоровское',
    'Обручевский','Орехово-Борисово Северное','Орехово-Борисово Южное','Останкинский','Отрадное',
    'Очаково-Матвеевское','Первомайское','Перово','Печатники','Покровское-Стрешнево','Преображенское',
    'Пресненский','Проспект Вернадского','Раменки','Роговское','Ростокино','Рязанский','Савёлки','Савёловский',
    'Свиблово','Северное Бутово','Северное Измайлово','Северное Медведково','Северное Тушино','Силино',
    'Сокол','Сокольники','Солнцево','Соколиная Гора','Сосенское','Старое Крюково','Строгино','Таганский',
    'Тверской','Текстильщики','Тёплый Стан','Тимирязевский','Троицк','Тропарёво-Никулино','Филёвский Парк',
    'Фили-Давыдково','Филимонковское','Хамовники','Ховрино','Хорошёво-Мнёвники','Хорошёвский','Царицыно',
    'Черёмушки','Чертаново Северное','Чертаново Центральное','Чертаново Южное','Щаповское','Щербинка','Щукино',
    'Южное Бутово','Южное Медведково','Южное Тушино','Южнопортовый','Якиманка','Ярославский','Ясенево'
]

industry_list = ['Торговля', 'Бытовые услуги', 'Гостиницы и общепит', 'Культура и спорт', 'Здравоохранение']

# Характеристики бизнеса  
money_count = pd.read_csv('raw/Районы_Москвы/count.csv', sep = ',')
money_reneview = pd.read_csv('raw/Районы_Москвы/reneview.csv', sep = ';')
money_profit = pd.read_csv('raw/Районы_Москвы/profit.csv', sep = ';')

# Объединение количества, выручки и прибыли в одну таблицу
industry = None
for df in [money_count, money_reneview, money_profit]:
    temp = df[(df['Год']==2022)&(df['Субъект'].isin(region_list))&(df['Отрасль'].isin(industry_list))]
    if industry is not None:
        industry = pd.merge(industry, temp,  how='left', on=['Субъект', 'Год', 'Отрасль']) 
    else:
        industry = temp
        
col_list = ['Субъект', 'Отрасль', 'Количество компаний', 'Средняя выручка, млн рублей', 
            'Средняя прибыль, млн рублей']
industry = industry[col_list]

# Временные таблицы, для выделения показателей по отраслям
temp_1 = industry[industry['Отрасль']=='Торговля'].groupby(['Субъект']).agg(
                                            Количество_торговля=('Количество компаний', 'first'),
                                            Выручка_торговля = ('Средняя выручка, млн рублей', 'first'),
                                            Прибыль_торговля = ('Средняя прибыль, млн рублей', 'first'),
                                           ).reset_index()

temp_2 = industry[industry['Отрасль']=='Бытовые услуги'].groupby(['Субъект']).agg(
                                            Количество_бытовые =('Количество компаний', 'first'),
                                            Выручка_бытовые = ('Средняя выручка, млн рублей', 'first'),
                                            Прибыль_бытовые = ('Средняя прибыль, млн рублей', 'first'),
                                           ).reset_index()

temp_3 = industry[industry['Отрасль']=='Гостиницы и общепит'].groupby(['Субъект']).agg(
                                            Количество_общепит =('Количество компаний', 'first'),
                                            Выручка_общепит = ('Средняя выручка, млн рублей', 'first'),
                                            Прибыль_общепит = ('Средняя прибыль, млн рублей', 'first'),
                                           ).reset_index()

temp_4 = industry[industry['Отрасль']=='Культура и спорт'].groupby(['Субъект']).agg(
                                            Количество_клубы =('Количество компаний', 'first'),
                                            Выручка_клубы = ('Средняя выручка, млн рублей', 'first'),
                                            Прибыль_клубы = ('Средняя прибыль, млн рублей', 'first'),
                                           ).reset_index()

temp_5 = industry[industry['Отрасль']=='Здравоохранение'].groupby(['Субъект']).agg(
                                            Количество_медицина =('Количество компаний', 'first'),
                                            Выручка_медицина = ('Средняя выручка, млн рублей', 'first'),
                                            Прибыль_медицина = ('Средняя прибыль, млн рублей', 'first'),
                                           ).reset_index()

firm = None
for df in [temp_1, temp_2, temp_3, temp_4, temp_5]:
    if firm is not None:
        firm = pd.merge(firm, df,  how='left', on=['Субъект']) 
    else:
        firm = df

# Характеристика недвижимости
house = pd.read_csv('raw/Районы_Москвы/Недвижимость.csv', sep = ',')
house = house[house['Субъект'].isin(region_list)]

# Характеристика качества жизни
social_rating = pd.read_csv('raw/Районы_Москвы/social_rating.csv', sep = ',') 

# Характеристики населения
people_count = pd.read_csv('raw/Районы_Москвы/население на 1 января2022.csv', sep = ';')    
people_count = people_count[people_count['Субъект'].isin(region_list)]

crime_count = pd.read_csv('raw/Районы_Москвы/преступность.csv', sep = ',')
crime_count = crime_count[(crime_count['Год']==2022)&(crime_count['Субъект'].isin(region_list))]
crime_count.rename(columns={'На 100 тыс. жителей Всего преступлений': "Преступлений, на 100 тыс.чел."}, inplace = True)

money_count = pd.read_csv('raw/Районы_Москвы/доходы_НДФЛ.csv', sep = '\t', decimal=",")
money_count = money_count[(money_count['Субъект'].isin(region_list))]

people = pd.merge(people_count, crime_count[['Субъект', 'Преступлений, на 100 тыс.чел.']], how='left', on=['Субъект']) 
people = pd.merge(people, money_count, how='left', on=['Субъект']) 

# Объединение в один датафрейм
df_region = None
for df in [people, firm, social_rating, house]:
    if df_region is not None:
        df_region = pd.merge(df_region, df,  how='left', on=['Субъект']) 
    else:
        df_region = df

df_region.to_csv('data/df_region.csv', index=False)